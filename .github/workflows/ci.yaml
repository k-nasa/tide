name: CI

on:
  pull_request:
  push:
    branches:
      - staging
      - trying

env:
  RUSTFLAGS: -Dwarnings

jobs:
  build_and_test:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [nightly]

    steps:
    - uses: actions/checkout@master

    - name: Cache cargo registry
      if: matrix.os != 'windows-latest'
      uses: actions/cache@preview
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-${{ matrix.rust }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}-

    - name: Cache deps crates
      if: matrix.os != 'windows-latest'
      uses: actions/cache@preview
      with:
        path: target/debug/deps
        key: ${{ runner.os }}-${{ matrix.rust }}-target-deps-${{ hashFiles('**/Cargo.toml') }}-

    - name: Cache build
      if: matrix.os != 'windows-latest'
      uses: actions/cache@preview
      with:
        path: target/debug/build
        key: ${{ runner.os }}-${{ matrix.rust }}-target-build-${{ hashFiles('**/Cargo.toml') }}-

    - name: Cache build
      if: matrix.os != 'windows-latest'
      uses: actions/cache@preview
      with:
        path: target/debug/.fingerprint
        key: ${{ runner.os }}-${{ matrix.rust }}-target-fingerprint-${{ hashFiles('**/Cargo.toml') }}-

    - name: Cache cargo registry (on Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/cache@preview
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-${{ matrix.rust }}-cargo-registry-${{ hashFiles('**\Cargo.toml') }}-

    - name: Cache deps crates (on Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/cache@preview
      with:
        path: target/debug/deps
        key: ${{ runner.os }}-${{ matrix.rust }}-target-deps-${{ hashFiles('**\Cargo.toml') }}-

    - name: Cache build (on Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/cache@preview
      with:
        path: target/debug/build
        key: ${{ runner.os }}-${{ matrix.rust }}-target-build-${{ hashFiles('**\Cargo.toml') }}-

    - name: Cache build (on Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/cache@preview
      with:
        path: target/debug/.fingerprint
        key: ${{ runner.os }}-${{ matrix.rust }}-target-fingerprint-${{ hashFiles('**\Cargo.toml') }}-

    - name: Install ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true

    - name: check
      uses: actions-rs/cargo@v1
      with:
        command: check
        args: --all --bins --examples

    - name: check unstable
      uses: actions-rs/cargo@v1
      with:
        command:  check
        args: --all --benches --bins --examples --tests

    - name: tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all

  check_fmt_and_docs:
    name: Checking fmt and docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - id: component
      uses: actions-rs/components-nightly@v1
      with:
        component: rustfmt

    - uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ steps.component.outputs.toolchain }}
          override: true

    - name: setup
      run: |
        rustup component add rustfmt
        rustc --version

    - name: fmt
      run: cargo fmt --all -- --check

    - name: Docs
      run: cargo doc

  clippy_check:
    name: Clippy check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install rust
        run: rustup update beta && rustup default beta
      - name: Install clippy
        run: rustup component add clippy
      - name: clippy
        run: cargo clippy --all
